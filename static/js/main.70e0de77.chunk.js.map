{"version":3,"sources":["reducers/attribute.reducer.js","components/StatAttribute.js","components/StatDisplay.js","components/CharactorSelect.js","components/CharactorName.js","components/StatChart.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["actionTypes","initialState","name","attributeList","attributeValue","actions","payload","type","StatAttribute","props","dispatch","useDispatch","attributeReducer","useSelector","attribute","React","useState","setName","setAttributeValue","useEffect","index","objToUpdate","attributeRedux","Paper","style","padding","margin","Typography","id","gutterBottom","Slider","defaultValue","getAriaValueText","value","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChange","event","StatDisplay","elevation","map","item","CharactorSelect","useStyle","makeStyles","theme","image","marginTop","marginBottom","width","height","charactorList","totalCharactors","setTotalCharactors","classes","length","naturalSlideWidth","naturalSlideHeight","totalSlides","infinite","Grid","container","direction","justify","alignItems","className","alt","src","process","CharactorName","TextField","fullWidth","label","StatChart","chartOption","setChartOption","chartSeries","setChartSeries","chart","xaxis","categories","data","options","series","yaxis","App","spacing","xs","md","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","state","middlewares","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70e0de77.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\n\r\n//Action Type\r\nexport const actionTypes = {\r\n  CHANGE_ATTRIBUTE_VALUE: \"[CHANGE ATTRIBUTE VALUE] Action\",\r\n};\r\n\r\n//State\r\nconst initialState = {\r\n  name: \"test\",\r\n  attributeList: [\"STR\", \"VIT\", \"DEX\", \"LUK\", \"INT\", \"AGI\"],\r\n  attributeValue: [1, 2, 3, 4, 5, 6],\r\n};\r\n\r\n//Reducer\r\nexport const reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE_ATTRIBUTE_VALUE:\r\n      return { ...state, attributeValue: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  changeAttrValue: (payload) => ({\r\n    type: actionTypes.CHANGE_ATTRIBUTE_VALUE,\r\n    payload,\r\n  }),\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as attributeRedux from '../reducers/attribute.reducer'\r\n\r\nfunction StatAttribute(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const attributeReducer = useSelector(({attribute}) => attribute)\r\n  const [name, setName] = React.useState(\"\");\r\n  const [attributeValue, setAttributeValue] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n      //set name\r\n      setName(attributeReducer.attributeList[props.index])\r\n\r\n      //set value\r\n      setAttributeValue(attributeReducer.attributeValue[props.index])\r\n  }, [props.index])\r\n\r\n  React.useEffect(() => {\r\n      //update redux value\r\n\r\n      let objToUpdate = [...attributeReducer.attributeValue]\r\n      \r\n      objToUpdate[props.index] = attributeValue;\r\n\r\n      dispatch(attributeRedux.actions.changeAttrValue(objToUpdate))\r\n\r\n  }, [attributeValue])\r\n\r\n  function valuetext(value) {\r\n    return `${value}`;\r\n  }\r\n\r\n  return (\r\n    <Paper style={{ padding: 5, margin: 5 }}>\r\n      <Typography id=\"discrete-slider\" gutterBottom>\r\n        {name}\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={1}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={10}\r\n        value={attributeValue}\r\n        onChange={(event, value) => {\r\n          setAttributeValue(value);\r\n        }}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StatAttribute;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StatAttribute from \"../components/StatAttribute\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction StatDisplay() {\r\n  const attributeReducer = useSelector(({ attribute }) => attribute);\r\n  return (\r\n    <Paper elevation={3}>\r\n      {attributeReducer.attributeList.map((item, index) => (\r\n        <StatAttribute key={index} index={index}></StatAttribute>\r\n      ))}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StatDisplay;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { CarouselProvider, Slider, Slide } from \"pure-react-carousel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\r\n\r\nfunction CharactorSelect() {\r\n  const useStyle = makeStyles((theme) => ({\r\n    image: {\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      width: 200,\r\n      height: \"auto\",\r\n    },\r\n  }));\r\n\r\n  const [charactorList] = React.useState([\r\n      'c_red','c_darkblue','c_white','c_brown','c_darkgreen','c_yellow'\r\n  ])\r\n\r\n  const [totalCharactors, setTotalCharactors] = React.useState(0)\r\n\r\n  const classes = useStyle();\r\n\r\n  React.useEffect(() => {\r\n      setTotalCharactors(charactorList.length)\r\n  }, [charactorList])\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n      <CarouselProvider\r\n        naturalSlideWidth={100}\r\n        naturalSlideHeight={60}\r\n        totalSlides={totalCharactors}\r\n        infinite\r\n      >\r\n        <Slider>\r\n          {charactorList.map((item,index) => (\r\n            <Slide key={item} index={index}>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <img\r\n                  className={classes.image}\r\n                  alt=\"\"\r\n                  src={`${process.env.PUBLIC_URL}/${item}.png`}\r\n                />\r\n              </Grid>\r\n            </Slide>\r\n          ))}\r\n        </Slider>\r\n      </CarouselProvider>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CharactorSelect;\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CharactorName() {\r\n    return (\r\n        <Paper elevation={3} style={{marginTop:10}}>\r\n            <TextField fullWidth id=\"standard-basic\" label=\"Name\" />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CharactorName\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction StatChart() {\r\n\r\n    // const [state, setState] = React.useState({\r\n    //   options: {\r\n    //     chart: {\r\n    //       id: \"basic-bar\",\r\n    //     },\r\n    //     xaxis: {\r\n    //       categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],\r\n    //     },\r\n    //   },\r\n    //   series: [\r\n    //     {\r\n    //       name: \"series-1\",\r\n    //       data: [30, 40, 45, 50, 49, 60, 70, 91],\r\n    //     },\r\n    //   ],\r\n    // });\r\n    const attributeReducer = useSelector(({attribute})=> attribute)\r\n    const [chartOption, setChartOption] = React.useState({})\r\n    const [chartSeries, setChartSeries] = React.useState([])\r\n\r\n    React.useEffect(() => {\r\n\r\n      //set chart option\r\n      setChartOption({\r\n        chart: {\r\n          id: \"basic-bar\",\r\n        },\r\n        xaxis: {\r\n          categories: [...attributeReducer.attributeList],\r\n        },\r\n      });\r\n\r\n      //todo: set chart series\r\n      setChartSeries([\r\n        {\r\n          name: \"series-1\",\r\n          data: [...attributeReducer.attributeValue],\r\n        },\r\n      ]);\r\n\r\n    }, [attributeReducer])\r\n\r\n    return (\r\n        <Paper elevation={3}>\r\n            <Chart\r\n              options={chartOption}\r\n              series={chartSeries}\r\n              yaxis={{\r\n                min:1,\r\n                max:10\r\n              }}\r\n              type=\"radar\"\r\n              width=\"100%\"\r\n            />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default StatChart\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StatDisplay from \"./components/StatDisplay\";\r\nimport CharactorSelect from \"./components/CharactorSelect\";\r\nimport CharactorName from \"./components/CharactorName\";\r\nimport StatChart from \"./components/StatChart\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Grid\r\n      style={{padding:10}}\r\n      spacing={2}\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      {/* Start Charactor Section */}\r\n      <Grid item xs={12} md={4} lg={4}>\r\n        <CharactorSelect></CharactorSelect>\r\n        <CharactorName></CharactorName>\r\n      </Grid>\r\n      {/* End Charactor Section */}\r\n\r\n      {/* Start Chart Section */}\r\n      <Grid item xs={8} md={4} lg={4}>\r\n        <StatChart></StatChart>\r\n      </Grid>\r\n      {/* End Chart Section */}\r\n\r\n      {/* Start Stat Section */}\r\n      <Grid item xs={4} md={4} lg={4}>\r\n        <StatDisplay></StatDisplay>\r\n      </Grid>\r\n      {/* End Stat Section */}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux'\r\nimport * as attribute from './attribute.reducer'\r\nexport default combineReducers({\r\n    attribute : attribute.reducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n//redux\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducers from \"./reducers\";\r\n//end redux\r\n\r\nvar middlewares = applyMiddleware(thunk);\r\n\r\nconst store = createStore(reducers, middlewares);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}